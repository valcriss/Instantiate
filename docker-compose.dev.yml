#--------------------------------------------------------------------------------------#
# Docker Compose file for development Instantiate Service
#--------------------------------------------------------------------------------------#
services:
#--------------------------------------------------------------------------------------#
# Instantiate service
#--------------------------------------------------------------------------------------#
  instantiate:
    build: .
    container_name: instantiate
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=development
      # - LOG_LEVEL=info      
      - HOST_DOMAIN=localhost
      - HOST_SCHEME=http
      # - IGNORE_SSL_ERRORS=true
      # ----------------------------------------------------------------------------------------------------
      #   Uncomment the following lines and set the values if you want to use GitLab authentication
      #   REPOSITORY_GITLAB_TOKEN is required for Gitlab comment on merge requests
      #   You can create a personal access token in GitLab with the "api" and "read_repository" scope.
      # ----------------------------------------------------------------------------------------------------
      # - REPOSITORY_GITLAB_USERNAME=root
      # - REPOSITORY_GITLAB_TOKEN=token
      # ----------------------------------------------------------------------------------------------------
      #   Uncomment the following lines and set the values if you want to use GitHub authentication
      #   REPOSITORY_GITHUB_TOKEN is required for GitHub comment on merge requests
      #   You can create a personal access token in GitHub with the "repo" scope.
      # ----------------------------------------------------------------------------------------------------
      # - REPOSITORY_GITHUB_USERNAME=username
      # - REPOSITORY_GITHUB_TOKEN=token
      # ----------------------------------------------------------------------------------------------------
      - DATABASE_URL=postgresql://instantiate:instantiate@database:5432/instantiate
      - MQTT_BROKER_URL=mqtt://broker:1883
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:latest
    container_name: database
    restart: unless-stopped
    environment:
      - POSTGRES_USER=instantiate
      - POSTGRES_PASSWORD=instantiate
      - POSTGRES_DB=instantiate
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  broker:
    image: emqx/nanomq:latest
    container_name: broker
    restart: unless-stopped

volumes:
  db_data:
    driver: local